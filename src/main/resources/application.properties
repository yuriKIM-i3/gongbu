spring.jpa.database=POSTGRESQL
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.datasource.url=jdbc:postgresql://db_test:5432/gongbu
spring.datasource.username=gongbu
spring.datasource.password=gongbu

spring.flyway.url=jdbc:postgresql://db:5432/gongbu
spring.flyway.user=gongbu
spring.flyway.password=gongbu
spring.flyway.locations=filesystem:src/main/resources/db/migration

spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.line.client-secret=${LINE_CLIENT_SECRET}
spring.security.oauth2.client.registration.line.client-id=${LINE_CLIENT_ID}

spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.line.authorization-uri=https://access.line.me/oauth2/v2.1/authorize
spring.security.oauth2.client.provider.line.token-uri=https://api.line.me/oauth2/v2.1/token
spring.security.oauth2.client.provider.line.user-info-uri=https://api.line.me/v2/profile
spring.security.oauth2.client.provider.line.user-info-authentication-method=query
spring.security.oauth2.client.provider.line.user-name-attribute=userId
spring.security.oauth2.client.provider.line.jwk-set-uri=https://api.line.me/oauth2/v2.1/certs
spring.security.oauth2.client.registration.line.provider=line
spring.security.oauth2.client.registration.line.client-authentication-method=post
spring.security.oauth2.client.registration.line.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.line.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.line.scope=profile
spring.security.oauth2.client.registration.line.client-name=LINE